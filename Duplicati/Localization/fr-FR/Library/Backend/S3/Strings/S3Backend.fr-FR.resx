<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AMZKeyDescriptionLong" xml:space="preserve">
    <value>La "clef d'accès secrète" AWS peut être obtenue après s'être connecté à votre compte AWS, elle peut être fournie via la propriété "ftp-password"</value>
  </data>
  <data name="AMZKeyDescriptionShort" xml:space="preserve">
    <value>"Clef d'accès secrète" AWS</value>
  </data>
  <data name="AMZUserIDDescriptionLong" xml:space="preserve">
    <value>L'"identifiant d'accès secret" AWS peut être obtenu après s'être connecté à votre compte AWS, il peut être fourni via la propriété "ftp-username"</value>
  </data>
  <data name="AMZUserIDDescriptionShort" xml:space="preserve">
    <value>"Identifiant d'accès secret" AWS</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Basé sur Amazon S3</value>
  </data>
  <data name="FTPPasswordDescriptionLong" xml:space="preserve">
    <value>Le mot de passe utilisé pour se connecter au serveur. Egalement accessible via la variable "FTP_PASSWORD".</value>
  </data>
  <data name="FTPPasswordDescriptionShort" xml:space="preserve">
    <value>Mot de passe utilisé pour se connecter au serveur</value>
  </data>
  <data name="DescriptionFTPUsernameLong" xml:space="preserve">
    <value>Le nom d'utilisateur utilisé pour se connecter au serveur. Egalement accessible via la variable "FTP_USERNAME".</value>
  </data>
  <data name="DescriptionFTPUsernameShort" xml:space="preserve">
    <value>Nom d'utilisateur utilisé pour se connecter au serveur</value>
  </data>
  <data name="NoAMZKeyError" xml:space="preserve">
    <value>Pas de clef secrète S3 fournie</value>
  </data>
  <data name="NoAMZUserIDError" xml:space="preserve">
    <value>Pas d'identifiant S3 fournis</value>
  </data>
  <data name="S3EurobucketDescriptionLong" xml:space="preserve">
    <value>Ce drapeau est seulement utilisé lors de la création de nouveaux espaces de stockages. Si ce drapeau est actif, l'espace de stockage est créé sur un serveur européen. Ce drapeau active le drapeau "s3-use-new-style". Les coûts de stockage sont significativement plus élevés sur les serveurs Européens.</value>
  </data>
  <data name="S3EurobucketDescriptionShort" xml:space="preserve">
    <value>Utiliser un serveur Européen</value>
  </data>
  <data name="S3NewStyleDescriptionLong" xml:space="preserve">
    <value>Utiliser les sous-domaines S3</value>
  </data>
  <data name="S3NewStyleDescriptionShort" xml:space="preserve">
    <value>Utiliser le style d'appel de sous-domaine</value>
  </data>
  <data name="UnableToDecodeBucketnameError" xml:space="preserve">
    <value>Impossible de déterminer le nom de l'espace de stockage pour l'hôte: {0}</value>
  </data>
  <data name="S3UseRRSDescriptionLong" xml:space="preserve">
    <value>Ce drapeau permet l'utilisation de l'entête spéciale RRS (Espaces de redondances réduits). Les fichiers enregistrés comme tels risquent plus facilement de disparaitre en cas de problèmes, mais le coût de stockage est moins élevé. Documentation complète ici: http://aws.amazon.com/about-aws/whats-new/2010/05/19/announcing-amazon-s3-reduced-redundancy-storage/</value>
  </data>
  <data name="S3UseRRSDescriptionShort" xml:space="preserve">
    <value>Utiliser les espaces de redondances réduits</value>
  </data>
  <data name="DeprecatedUrlFormat" xml:space="preserve">
    <value>Vous utilisez un format d'URL obsolète, veillez le rempacer par: {0}</value>
  </data>
  <data name="Description_v2" xml:space="preserve">
    <value>Ce serveur distant permet de lire et écrire des données sur un compte Amazon S3. Les formats autorisés sont "s3://nomducompte/prefixe"</value>
  </data>
  <data name="OptionsAreMutuallyExclusiveError" xml:space="preserve">
    <value>Les options --{0} et --{1} s'excluent mutuellement</value>
  </data>
  <data name="S3EurobucketDeprecationDescription" xml:space="preserve">
    <value>Veillez utiliser --{0}={1} à la place</value>
  </data>
  <data name="S3LocationDescriptionLong" xml:space="preserve">
    <value>Cette option est seulement utilisée lors de la création de nouveaux comptes S3. Utilisez cette option pour modifier la région (pays) dans laquelle les données seront sauvegardées. Amazon est nettement plus cher si le compte n'est pas Américain. Locations de comptes connues {0}</value>
  </data>
  <data name="S3LocationDescriptionShort" xml:space="preserve">
    <value>Spécifie les contraintes de localisation du compte S3</value>
  </data>
  <data name="S3ServerNameDescriptionLong" xml:space="preserve">
    <value>D'autres sociétés qu' Amazon supportent maintenant l'API S3, de ce fait il est possible d'utiliser leurs services avec Duplicati. Utilisez cette option pour spécifier le nom de domaine. Les fournisseurs actuellement connus sont: {0}</value>
  </data>
  <data name="S3ServerNameDescriptionShort" xml:space="preserve">
    <value>Spécifie un autre fournisseur d'accès de serveur S3</value>
  </data>
  <data name="UnableToParseURLError" xml:space="preserve">
    <value>Impossible d'identifier l'URL:{0}</value>
  </data>
  <data name="S3NewStyleDeprecation" xml:space="preserve">
    <value>Cet argument permet de d'utiliser les sous-domaines avec S3 plutôt que le préfix url de l'ancienne méthode. Voyez la documentation Amazon S3 pour plus de détails.</value>
  </data>
  <data name="DescriptionUseSSLLong" xml:space="preserve">
    <value>Utilisez ce drapeau pour communiquer en utilisant le protocole SSL (Secure Socket Layer) over (https). Notez que les noms de comptes avec des points (.) ont des problèmes avec les connections SSL.</value>
  </data>
  <data name="DescriptionUseSSLShort" xml:space="preserve">
    <value>Utilisation d'une connexion SSL (https)</value>
  </data>
</root>