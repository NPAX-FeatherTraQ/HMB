<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AMZKeyDescriptionLong" xml:space="preserve">
    <value>A chave de acesso AWS pode ser obtida após o login na sua conta AWS, este parâmetro também pode ser informado através do parâmetro "ftp-password"</value>
  </data>
  <data name="AMZKeyDescriptionShort" xml:space="preserve">
    <value>A chave de acesso AWS</value>
  </data>
  <data name="AMZUserIDDescriptionLong" xml:space="preserve">
    <value>O ID de acesso AWS pode ser obtido após o login a sua conta AWS.</value>
  </data>
  <data name="AMZUserIDDescriptionShort" xml:space="preserve">
    <value>O ID de acesso AWS</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Baseado no Amazon S3</value>
  </data>
  <data name="FTPPasswordDescriptionLong" xml:space="preserve">
    <value>A senha utilizada para se conectar no servidor. Este parâmetro pode ser informado através da variável de ambiente "FTP_PASSWORD".</value>
  </data>
  <data name="FTPPasswordDescriptionShort" xml:space="preserve">
    <value>Provê a senha utilizada para conectar ao servidor</value>
  </data>
  <data name="DescriptionFTPUsernameLong" xml:space="preserve">
    <value>O usuário utilizado para conectar ao servidor. Também pode ser fornecido como a variável de ambiente "FTP_USERNAME".</value>
  </data>
  <data name="DescriptionFTPUsernameShort" xml:space="preserve">
    <value>Fornece o usuário utilizado para se conectar ao servidor.</value>
  </data>
  <data name="NoAMZKeyError" xml:space="preserve">
    <value>Nenhum chave para acesso ao Amazon S3 foi informada</value>
  </data>
  <data name="NoAMZUserIDError" xml:space="preserve">
    <value>Nenhum ID de usuário Amazon S3 foi informado</value>
  </data>
  <data name="S3EurobucketDescriptionLong" xml:space="preserve">
    <value>Esta opção somente é utilizada para criar armazenamentos. Se esta opção for ativada, o armazenamento será criado em um servidor europeo. Esta opção força o parâmetro "s3-use-new-style". A Amazon cobra um pouco mais por armazenamentos eurpeos.</value>
  </data>
  <data name="S3EurobucketDescriptionShort" xml:space="preserve">
    <value>Utilizar um servidor Europeo</value>
  </data>
  <data name="S3NewStyleDescriptionLong" xml:space="preserve">
    <value>Especifique este argumento para fazer com que o protocolo S3 utilize sub-domínios ao invés de prefixos na url. Verifique a documentação do Amazon S3 para mais detalhes.</value>
  </data>
  <data name="S3NewStyleDescriptionShort" xml:space="preserve">
    <value>Utilizar chamadas com sub-domínios</value>
  </data>
  <data name="UnableToDecodeBucketnameError" xml:space="preserve">
    <value>Não foi possível determinar o nome de armazenamento para o host: {0}</value>
  </data>
  <data name="S3UseRRSDescriptionLong" xml:space="preserve">
    <value>Esta opção ativa o uso do cabeçalho RRS. Arquivos armazenados utilizando RRS são mais propícios a desaparecer, mas custam menos. Veja a descrição completa em: http://aws.amazon.com/about-aws/whats-new/2010/05/19/announcing-amazon-s3-reduced-redundancy-storage/</value>
  </data>
  <data name="S3UseRRSDescriptionShort" xml:space="preserve">
    <value>Utilizar armazenamento de redundância reduzido</value>
  </data>
  <data name="DeprecatedUrlFormat" xml:space="preserve">
    <value>Você está utilizando um formato de URL depreciado, por favor altere para: {0}</value>
  </data>
  <data name="Description_v2" xml:space="preserve">
    <value>Este armazenamento pode ler e escrever dados em um servidor compatível com Amazon S3. Os formatos permitidos são: "s3://bucketname/prefix"</value>
  </data>
  <data name="OptionsAreMutuallyExclusiveError" xml:space="preserve">
    <value>As opções --{0} e --{1} são mutuamente exclusivas</value>
  </data>
  <data name="S3EurobucketDeprecationDescription" xml:space="preserve">
    <value>Por favor utilize a opção --{0}={1}</value>
  </data>
  <data name="S3LocationDescriptionLong" xml:space="preserve">
    <value>Esta opção só pode ser utilizada quando forem criados novos containers. Utilize esta opção para alterar a região dos dados armazenados. A Amazon cobra um pouco a mais por armazenamentos fora dos EUA. Regiões de container conhecidas:
{0}</value>
  </data>
  <data name="S3LocationDescriptionShort" xml:space="preserve">
    <value>Especifica as restrições de local S3</value>
  </data>
  <data name="S3ServerNameDescriptionLong" xml:space="preserve">
    <value>Outras companias que não a Amazon estão suportando a API S3, isso significa que este armazenamento pode ler e escrever dados neste provedores. Utilize esta opção para definir o nome do host. Os provedores conhecidos atualmente são:
{0}</value>
  </data>
  <data name="S3ServerNameDescriptionShort" xml:space="preserve">
    <value>Especifica um nome de servidor S3 alternativo</value>
  </data>
  <data name="UnableToParseURLError" xml:space="preserve">
    <value>Não foi possível tratar a URL: {0}</value>
  </data>
  <data name="S3NewStyleDeprecation" xml:space="preserve">
    <value>As opções de nomeação de subdomínio não tem qualquer efeito, a biblioteca irá utilizar a nomeação correta.</value>
  </data>
  <data name="DescriptionUseSSLLong" xml:space="preserve">
    <value>Utilize esta opção para se comunicar utilizando SSL sobre http (https). Note que container com um ponto no nome podem ter problemas com conexões SSL.</value>
  </data>
  <data name="DescriptionUseSSLShort" xml:space="preserve">
    <value>Instrui o Duplicati a utilizar uma conexão SSL (https)</value>
  </data>
</root>