<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AMZKeyDescriptionLong" xml:space="preserve">
    <value>Для получения секретного ключа AWS (Secret Access Key) зайдите в свою учетную запись AWS, его также можно ввести в свойство "ftp-password"</value>
  </data>
  <data name="AMZKeyDescriptionShort" xml:space="preserve">
    <value>секретный ключ AWS</value>
  </data>
  <data name="AMZUserIDDescriptionLong" xml:space="preserve">
    <value>Для получения AWS ID (Access Key ID) зайдите в свою учетную запись AWS, его также можно ввести в свойство "ftp-username"</value>
  </data>
  <data name="AMZUserIDDescriptionShort" xml:space="preserve">
    <value>AWS "Access Key ID"</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Основано на Amazon S3</value>
  </data>
  <data name="FTPPasswordDescriptionLong" xml:space="preserve">
    <value>Пароль для соединения с сервером. Еще его можно указать в переменной среды "FTP_PASSWORD".</value>
  </data>
  <data name="FTPPasswordDescriptionShort" xml:space="preserve">
    <value>Пароль для соединения с сервером</value>
  </data>
  <data name="DescriptionFTPUsernameLong" xml:space="preserve">
    <value>Имя пользователя для соединения с сервером. Еще его можно указать в переменной среды "FTP_USERNAME".</value>
  </data>
  <data name="DescriptionFTPUsernameShort" xml:space="preserve">
    <value>Имя пользователя для соединения с сервером.</value>
  </data>
  <data name="NoAMZKeyError" xml:space="preserve">
    <value>Не сообщен секретный ключ Amzon S3</value>
  </data>
  <data name="NoAMZUserIDError" xml:space="preserve">
    <value>Не сообщен userID Amzon S3</value>
  </data>
  <data name="S3EurobucketDescriptionLong" xml:space="preserve">
    <value>Этот ключ используется только при создании новых контейнеров. Если он установлен, контейнер создается на европейском сервере. Этот ключ включает настройку "s3-use-new-style". Контейнер на европейском сервере немного дороже.</value>
  </data>
  <data name="S3EurobucketDescriptionShort" xml:space="preserve">
    <value>Используйте европейский сервер Amazon</value>
  </data>
  <data name="S3NewStyleDescriptionLong" xml:space="preserve">
    <value>Укажите этот аргумент, чтобы модуль S3 использовал поддомены вместо префиксов в URL. Подробности есть в документации по Amazon S3.</value>
  </data>
  <data name="S3NewStyleDescriptionShort" xml:space="preserve">
    <value>Используйте стиль вызова поддомена</value>
  </data>
  <data name="UnableToDecodeBucketnameError" xml:space="preserve">
    <value>Не определить имя контейнера для хоста: {0}</value>
  </data>
  <data name="S3UseRRSDescriptionLong" xml:space="preserve">
    <value>Этот ключ включает использование специального заголовка RRS. Файлы, сохраненные в RRS пропадут вероятнее, чем сохраненные обычным образом, но их хранение дешевле. См. подробное описание на стр. http://aws.amazon.com/about-aws/whats-new/2010/05/19/announcing-amazon-s3-reduced-redundancy-storage/</value>
  </data>
  <data name="S3UseRRSDescriptionShort" xml:space="preserve">
    <value>Используйте хранилище с пониженной избыточностью (RRS)</value>
  </data>
  <data name="DeprecatedUrlFormat" xml:space="preserve">
    <value>Не используйте устаревший формат URL, замените его на: {0}</value>
  </data>
  <data name="Description_v2" xml:space="preserve">
    <value>Этот модуль умеет общаться с серверами, совместимыми с Amazon S3. Формат адреса: "s3://bucketname/prefix"</value>
  </data>
  <data name="OptionsAreMutuallyExclusiveError" xml:space="preserve">
    <value>Ключи --{0} и --{1} - взаимоисключающие</value>
  </data>
  <data name="S3EurobucketDeprecationDescription" xml:space="preserve">
    <value>Используйте --{0}={1} вместо них</value>
  </data>
  <data name="S3LocationDescriptionLong" xml:space="preserve">
    <value>Этот ключ используется только при создании новых контейнеров. Используйте его, если надо указать, в каком регионе хранить данные. Контейнеры вне США немного дороже. Доступные места хранения контейнеров:</value>
  </data>
  <data name="S3LocationDescriptionShort" xml:space="preserve">
    <value>Указывает ограничения размещения S3</value>
  </data>
  <data name="S3ServerNameDescriptionLong" xml:space="preserve">
    <value>S3 API поддерживает не только Amazon, этот модуль может обмениваться данными и с другими провайдерами. Используйте эту настройку для указания имени сервера. На данный момент известны следующие провайдеры:
{0}</value>
  </data>
  <data name="S3ServerNameDescriptionShort" xml:space="preserve">
    <value>Укажите имя альтернативного сервера S3</value>
  </data>
  <data name="UnableToParseURLError" xml:space="preserve">
    <value>Не распознать URL: {0}</value>
  </data>
  <data name="S3NewStyleDeprecation" xml:space="preserve">
    <value>Настройка вызова поддомена ничего не делает, программа будет использовать корректный способ вызова в любом случае</value>
  </data>
  <data name="DescriptionUseSSLLong" xml:space="preserve">
    <value>Установите флаг для соединения с использованием Secure Socket Layer (SSL) через http (https). Помните, что имя контейнера, содержащего точку, может вызывать проблемы при соединении через SSL.</value>
  </data>
  <data name="DescriptionUseSSLShort" xml:space="preserve">
    <value>Требует от программы использовать соединение через SSL (https)</value>
  </data>
</root>