<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlternateDestinationMarkerLong" xml:space="preserve">
    <value>Denne indstilling virker kun hvis indstillingen --{0} også er aktiveret. Hvis der er angivet alternative stier angiver denne indstilling at der skal findes en markør fil i destinationsmappen. Dette kan bruges til at håndtere situationer hvor et ekstern drev skifter drevbogstav eller monteringsplacering. Ved at kontrollere at en speciel fil findes er det muligt at forhindre at data gemmes på en uønsket placering. Indholdet af filen undersøges aldrig, kun hvorvidt den findes.</value>
  </data>
  <data name="AlternateDestinationMarkerShort" xml:space="preserve">
    <value>Led efter en fil i destinationsmappen</value>
  </data>
  <data name="AlternateTargetPathsLong" xml:space="preserve">
    <value>Denne indstilling tillader at flere destinationer angives. Den primære destination placeres foran den liste af destinationer der angives med denne indstilling. Før der startes en backup kontrolleres det hvilke mapper fra listen der findes, og muligvis om en speciel markør fil findes, hvis denne er angivet med {0}. Den første mappe der findes og indeholder markør filen bliver brug som destination. Flere destinationer adskilles med {1}. Under Windows må stien også være en UNC sti, og drevbogstavet kan erstattes med en stjerne (*), f.eks. vil "*:\backup" undersøge alle drev. Hvis et brugernavn og kodeord er angivet bliver det samme brugernavn og kodeord anvendt til alle destinationer.</value>
  </data>
  <data name="AlternateTargetPathsShort" xml:space="preserve">
    <value>En liste af sekundære destinationer</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Denne backend kan læse og skrive data til en mappe. Tilladte formater er "file://hostname/folder" eller "file://username:password@hostname/folder". Du kan både angive UNC stier (f.eks.: "file://\\server\folder") eller lokale stier (f.eks.: (win) "file://c:\folder", (linux) "file:///usr/pub/files")</value>
  </data>
  <data name="DescriptionFTPPasswordLong" xml:space="preserve">
    <value>Kodeordet anvendt for at logge ind på serveren. Dette kan også angives via miljøvariablen "FTP_PASSWORD".</value>
  </data>
  <data name="DescriptionFTPPasswordShort" xml:space="preserve">
    <value>Angiver kodeordet der anvendes til at logge på serveren</value>
  </data>
  <data name="DescriptionFTPUsernameLong" xml:space="preserve">
    <value>Brugernavnet anvendt for at logge ind på serveren. Dette kan også angives via miljøvariablen "FTP_USERNAME".</value>
  </data>
  <data name="DescriptionFTPUsernameShort" xml:space="preserve">
    <value>Angiver brugernavnet der anvendes til at logge på serveren</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Fil baseret</value>
  </data>
  <data name="FolderMissingError" xml:space="preserve">
    <value>Mappen {0} findes ikke</value>
  </data>
  <data name="NoDestinationWithMarkerFileError" xml:space="preserve">
    <value>Markør filen "{0}" blev ikke fundet på nogen af de undersøgte destinationer: {1}</value>
  </data>
  <data name="UseMoveForPutLong" xml:space="preserve">
    <value>Når der skal gemmes en fil, er standard proceduren at kopiere filen og slette originalen. Dette sikrer at operationen kan gentages hvis noget går galt. Hvis denne indstilling aktiveres, vil retry funktionen muligvis fejle. Denne indstilling har ingen effekt medmindre indstillingen --disable-streaming-transfers er aktiveret.</value>
  </data>
  <data name="UseMoveForPutShort" xml:space="preserve">
    <value>Flyt filen i stedet for kopiering</value>
  </data>
</root>