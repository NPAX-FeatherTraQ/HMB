<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddedFoldersHeader" xml:space="preserve">
    <value>Tilføjede mapper</value>
  </data>
  <data name="CollectionStatusHeader" xml:space="preserve">
    <value>Fandt {0} backup kæder på destinationen

Type\tTime\t\t\tVolumes\tSize</value>
  </data>
  <data name="CollectionStatusLineFull" xml:space="preserve">
    <value>Fuld\t{0}\t{1}\t{2}</value>
  </data>
  <data name="CollectionStatusLineInc" xml:space="preserve">
    <value> Trin\t{0}\t{1}\t{2}</value>
  </data>
  <data name="ControlFilesHeader" xml:space="preserve">
    <value>Kontrol filer</value>
  </data>
  <data name="DeletedFilesHeader" xml:space="preserve">
    <value>Slettede filer</value>
  </data>
  <data name="DeletedFoldersHeader" xml:space="preserve">
    <value>Slettede mapper</value>
  </data>
  <data name="DuplicatiOptionsHeader" xml:space="preserve">
    <value>Duplicati indstillinger:</value>
  </data>
  <data name="FailedToParseParametersFileError" xml:space="preserve">
    <value>Unable to read the parameters file "{0}", reason: {1}</value>
  </data>
  <data name="FileEntryNotFound" xml:space="preserve">
    <value>&lt; ikke fundet &gt;</value>
  </data>
  <data name="FiltersCannotBeUsedWithFileError" xml:space="preserve">
    <value>Filters cannot be specified on the commandline if filters are also present in the parameter file</value>
  </data>
  <data name="FindLastVersionEntry" xml:space="preserve">
    <value>{0}\t{1}</value>
  </data>
  <data name="FindLastVersionHeader" xml:space="preserve">
    <value>Backuptid\t\tFilnavn</value>
  </data>
  <data name="FolderCreatedMessage" xml:space="preserve">
    <value>Mappen {0} blev oprettet</value>
  </data>
  <data name="GenericModulesHeader" xml:space="preserve">
    <value>Understøttede generiske moduler:</value>
  </data>
  <data name="IntegerParseError" xml:space="preserve">
    <value>Kan ikke omdanne "{0}" til et tal</value>
  </data>
  <data name="InternalOptionUsedError" xml:space="preserve">
    <value>Indstillingen --{0} var givet, men denne indstilling er reserveret til intern brug, og må ikke angives på kommandolinien</value>
  </data>
  <data name="ModifiedFilesHeader" xml:space="preserve">
    <value>Ændrede filer</value>
  </data>
  <data name="ModuleIsLoadedAutomatically" xml:space="preserve">
    <value>Modulet indlæses automatisk, brug --disable-module for at forhindre dette</value>
  </data>
  <data name="ModuleIsNotLoadedAutomatically" xml:space="preserve">
    <value>Moduler bliver ikke automatisk indlæst, brug --enable-module for at indlæse det</value>
  </data>
  <data name="NewFilesHeader" xml:space="preserve">
    <value>Nye filer</value>
  </data>
  <data name="NewOrModifiedFilesHeader" xml:space="preserve">
    <value>Nye/ændrede filer</value>
  </data>
  <data name="ParametersFileOptionLong" xml:space="preserve">
    <value>This option can be used to store some or all of the options given to the commandline client. The file must be a plain text file, UTF-8 encoding is preferred. Each line in the file should be of the format --option=value. The special options --source and --target can be used to override the localpath and the remote destination uri, respectively. The options in this file take precedence over the options provided on the commandline. You cannot specify filters in both the file and on the commandline.</value>
  </data>
  <data name="ParametersFileOptionShort" xml:space="preserve">
    <value>Path to a file with parameters</value>
  </data>
  <data name="ProgramUsageBackend" xml:space="preserve">
    <value>En &lt;backend&gt; genkendes ved en url, såsom ftp://host/ eller ssh://server/.
 Ved at bruge dette system kan Duplicati afgøre om der skal tages en backup eller gendannes filer.
 Kommandoerne til oprydning og sletning, fjerner ikke filer medmindre indstillingen --force er sat, så du kan undersøge hvilke filer der bliver slettet, før de rent faktisk bliver slettet.
 Oprydningskommandoen bør ikke bruges medmindre en backup blev afbrudt og der derfor er delvise efterladte filer. Duplicati vil vise en besked hvis dette er sket.
 Kommandoen til sletning kan bruges til at fjerne gamle backup sæt efterhånden som nyere backup sæt dannes.</value>
  </data>
  <data name="ProgramUsageBackup" xml:space="preserve">
    <value>Backup (udfør en fuld eller trinvis backup):
  Duplicati.CommandLine [full] [options] &lt;kilde mappe&gt; &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageCleanup" xml:space="preserve">
    <value>Oprydning (fjern delvise og ubrugte filer):
  Duplicati.CommandLine cleanup [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageCreateFolders" xml:space="preserve">
    <value>Opret mappe (gøres normalt automatisk):
  Duplicati.CommandLine create-folder [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageDeleteOld" xml:space="preserve">
    <value>Slet gamle backup sæt:
  Duplicati.CommandLine delete-all-but-n-full &lt;number of full backups to keep&gt; [options] &lt;backend&gt;
  Duplicati.CommandLine delete-older-than &lt;max allowed age&gt; [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageFilters" xml:space="preserve">
    <value>Filtre:
 Duplicati bruger filtre til at inkludere og ekskludere filer.
  Duplicati bruger et "første match" system, hvor det først matchende filter angiver om en fil inkluderes eller ekskluderes. Internt anvender Duplicati regulære udtryk som filtre, men understøtter filtre i fil-globbing formatet. Rækkefølgen af filtrene på kommandolinien angiver hvilken rækkefølge de anvendes i. Et eksempel:
    --include=*.txt --exclude=*\Thumbs.db --include=*

  Selvom det sidste filter inkluderer alt, bliver ingen filer med navnet "Thumbs.db" inkluderet, fordi de matcher ekskluderingsreglen før inkluderingsreglen. Stier evalueres i deres fulde format, og som stier der er relative til kildemappen, men inklusiv en foranstillet skråstreg. Et eksempel:

{0}
  Hvis en mappe er ekskluderet bliver alle filer i den mappe altid ekskluderet, også selvom der er filtre der inkluederer filer i mappen. Hvis mappen inkluderes med et efterfølgende wildcard, bliver alle filer i mappen inkluderet. Hvis mappen inkluderes uden et wildcard, kan filer inkluderes eller ekskluderes med ekstra filtre.</value>
  </data>
  <data name="ProgramUsageFindLastVersion" xml:space="preserve">
    <value>Find sidste version af en fil:
  Duplicati.CommandLine find-last-version [options] --file-to-restore=&lt;files to find&gt; &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageHeader" xml:space="preserve">
    <value>********** Duplicati v. {0} **********

Anvendelse:</value>
  </data>
  <data name="ProgramUsageListContentFiles" xml:space="preserve">
    <value>Liste med indhold (filer der kan gendannes):
  Duplicati.CommandLine list-current-files [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageListFiles" xml:space="preserve">
    <value>Liste med filer:
  Duplicati.CommandLine list [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageListSets" xml:space="preserve">
    <value>Liste med backup sæt:
  Duplicati.CommandLine collection-status [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageListSignatureFiles" xml:space="preserve">
    <value>Liste med signature filer (filer i et enkelt backup sæt):
  Duplicati.CommandLine list-actual-signature-files [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageListSourceFolders" xml:space="preserve">
    <value>Liste med kildemapper (mapper der er taget backup af):
  Duplicati.CommandLine list-source-folders [options] &lt;backend&gt;</value>
  </data>
  <data name="ProgramUsageOptionTypes" xml:space="preserve">
    <value>Indstillings typer:
 Der findes følgende indstillingstyper:
  Heltal: en numerisk værdi
  Boolsk værdi: en sandhedsværdi, --force og --force=true er det samme. --force=false er det modsatte
  Tidsinterval: en tid angivet i det specielle tidsformat (beskrevet herunder)
  Størrelse: en størrelse, såsom 5mb eller 200kb
  Valgmulighed: en af de angivne muligheder
  Sti: stien til en mappe eller fil
  Tekst: enhver anden type</value>
  </data>
  <data name="ProgramUsagePurgeCache" xml:space="preserve">
    <value>Ryd signatur cache:
  Duplicati.CommandLine purge-signature-cache [options]</value>
  </data>
  <data name="ProgramUsageRestore" xml:space="preserve">
    <value>Gendan (gendan alle eller nogle filer):
  Duplicati.CommandLine [options] &lt;backend&gt; &lt;destinationsmappe&gt;</value>
  </data>
  <data name="ProgramUsageTimes" xml:space="preserve">
    <value>Tider:
 Duplicati bruger samme tidssystem som duplicity, hvor tider kan angives som:
  1: teksten "now", som angiver det nuværende tidspunkt
  2: antallet af sekunder efter epoch, f.eks.: 123456890
  3: en tekst såsom "2009-03-26T08:30:00+01:00"
  4: en interval tekst med Y, M, W, D, h, m, s for År, Måned, Uge, Dag, time, minut og sekund, f.eks.: "1M4D" for en måned og fire dage, eller "5m" for fem minutter.</value>
  </data>
  <data name="ProgramUsageVerify" xml:space="preserve">
    <value>Kontroler backup integritet:
  Duplicati.CommandLine verify &lt;backend&gt; --verification-level=manifest|signatures|full</value>
  </data>
  <data name="SupportedBackendsHeader" xml:space="preserve">
    <value>Understøttede destinationer:</value>
  </data>
  <data name="SupportedCompressionModulesHeader" xml:space="preserve">
    <value>Understøttede kompressionsmoduler:</value>
  </data>
  <data name="SupportedEncryptionModulesHeader" xml:space="preserve">
    <value>Understøttede krypteringsmoduler:</value>
  </data>
  <data name="SupportedOptionsHeader" xml:space="preserve">
    <value>Understøttede indstillinger</value>
  </data>
  <data name="TimeParseError" xml:space="preserve">
    <value>Kan ikke omdanne "{0}" til en tid: {1}</value>
  </data>
  <data name="UnhandledException" xml:space="preserve">
    <value>En fejl opstod: {0}</value>
  </data>
  <data name="UnhandledInnerException" xml:space="preserve">
    <value>Den indre fejlbesked er: {0}</value>
  </data>
  <data name="UsageExampleLinux" xml:space="preserve">
    <value>    Duplicati.CommandLine /home/user/ ftp://host/folder --exclude=/file.txt

  I dette eksempel bliver filen "/home/user/file.txt" ekskluderet.
</value>
  </data>
  <data name="UsageExampleWindows" xml:space="preserve">
    <value>    Duplicati.CommandLine C:\Documents\Files ftp://host/folder --exclude=\file.txt

  I dette eksempel bliver filen "C:\Documents\Files\file.txt" ekskluderet.
 </value>
  </data>
  <data name="VerificationCompleted" xml:space="preserve">
    <value>Verificationen er afsluttet, opsumering:
Manifest filer kontrolleret: {0}
Signature filer kontrolleret: {1}
Content filer kontrolleret: {2}
Fejl: {3}</value>
  </data>
  <data name="VerificationErrorHeader" xml:space="preserve">
    <value>Fejl beskeder fundet:</value>
  </data>
  <data name="WrongNumberOfCommandsError_v2" xml:space="preserve">
    <value>Fandt {0} kommandoer men forventede {1}, kommandoer: {2}</value>
  </data>
  <data name="WrongNumberOfArgumentsError" space="preserve">
    <value>Forkert antal argumenter</value>
  </data>
</root>