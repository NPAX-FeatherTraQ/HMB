<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateFolderError" xml:space="preserve">
    <value>Fehler beim Erstellen des Ordners: "{0}", Fehlermeldung: {1}</value>
  </data>
  <data name="DeletedFilenameError" xml:space="preserve">
    <value>Fehler beim Bestimmen des Dateizustands, Dateiname: {0}, Ordnername: {1}</value>
  </data>
  <data name="DeleteFileError" xml:space="preserve">
    <value>Fehler beim Löschen der Datei: "{0}", Fehlermeldung: {1}</value>
  </data>
  <data name="DeleteFolderError" xml:space="preserve">
    <value>Fehler beim Löschen des Ordners: "{0}", Fehlermeldung: {1}</value>
  </data>
  <data name="FileProcessError" xml:space="preserve">
    <value>Fehler beim Verarbeiten der Datei: {0}, Fehlermeldung: {1}</value>
  </data>
  <data name="FileToDeleteMissingError" xml:space="preserve">
    <value>Die zum Löschen markierte Datei existierte nicht: {0}</value>
  </data>
  <data name="FolderToDeleteMissingError" xml:space="preserve">
    <value>Der Ordner war zum Löschen markiert, aber existierte nicht: {0}</value>
  </data>
  <data name="MultipassUsageError" xml:space="preserve">
    <value>RSync-"Multi Pass" ist nicht initialisiert
</value>
  </data>
  <data name="RestoreFileError" xml:space="preserve">
    <value>Fehler beim Wiederherstellen der Datei:  "{0}", Fehlermeldung: {1}</value>
  </data>
  <data name="RestoreFolderDeltaError" xml:space="preserve">
    <value>Ordner nicht vorhanden bei der Wiederherstellung (RSyncDir Delta): {0}
</value>
  </data>
  <data name="RestoreFolderMissingError" xml:space="preserve">
    <value>Der Ordner existierte nicht bei der Wiederherstellung: {0}</value>
  </data>
  <data name="FileShouldBePartialError" xml:space="preserve">
    <value>Die Datei {0} wurde in einem früheren jedoch nicht im aktuellen Volume als unvollständig markiert
</value>
  </data>
  <data name="InvalidPartialFileEntry" xml:space="preserve">
    <value>Der unvollständige Datei-Rekord für {0} entspricht nicht der Datei
</value>
  </data>
  <data name="InvalidPartialRecordError" xml:space="preserve">
    <value>Die unvollständige Rekord-Datei ist ungültig
</value>
  </data>
  <data name="PartialFileAddedLogMessage" xml:space="preserve">
    <value>Datei {0} ist unvollständig auf Grund des Byte-Offset {1}
</value>
  </data>
  <data name="PartialFileIncompleteWarning" xml:space="preserve">
    <value>Die nur teilweise vorhandene Datei {0} wurde nicht fertiggestellt
</value>
  </data>
  <data name="PartialLeftoverDeleteError" xml:space="preserve">
    <value>Konnte die teilweise unvollständige Datei {0} nicht bereinigen, Fehlermeldung: {1}
</value>
  </data>
  <data name="InternalPathMappingError" xml:space="preserve">
    <value>Ein interner Fehler ist aufgetreten. Der Ordner {0} ist kein Unterordner eines der Quellordner: {1}.</value>
  </data>
  <data name="SnapshotFailedError" xml:space="preserve">
    <value>Konnte keine Momentaufnahme erstellen: {0}
</value>
  </data>
  <data name="FailedToSetFileWriteTime" xml:space="preserve">
    <value>Konnte die Speicherungs-Zeit für die Datei {0} nicht erstellen. Fehlermeldung: {1}
</value>
  </data>
  <data name="FailedToSetFolderWriteTime" xml:space="preserve">
    <value>Konnte die Speicherungs-Zeit für das Verzeichnis {0} nicht erstellen. Fehlermeldung: {1}
</value>
  </data>
  <data name="UsnDisposeFailedWarning" xml:space="preserve">
    <value>Konnte nicht über den USN-Helfer verfügen: {0}</value>
  </data>
  <data name="UsnFailedError" xml:space="preserve">
    <value>Konnte USN-Daten nicht lesen: {0}
</value>
  </data>
  <data name="UsnJournalIdChangedWarning" xml:space="preserve">
    <value>Die USN-Journal-ID für Volumen {0} wurde bei einem vollständigen Dateivergleich von {1} auf {2} geändert.</value>
  </data>
  <data name="UsnNotSupportedOnLinuxError" xml:space="preserve">
    <value>USN wird unter Linux nicht unterstützt</value>
  </data>
  <data name="UsnNumberingFaultWarning" xml:space="preserve">
    <value>Ein vollständiger Dateivergleich ergab: die gespeicherte USN-Nummer für Volumen {0} ist {1}, aber die aktuelle USN-Nummer ist {2}</value>
  </data>
  <data name="FileChangedWhileReadError" xml:space="preserve">
    <value>Die Datei {0} wurde während der Sicherung verändert und daher nicht in den Sicherungs-Satz aufgenommen
</value>
  </data>
  <data name="FileChangedWhileReadWarning" xml:space="preserve">
    <value>Die Datei {0} wurde während der Sicherung verändert, dies kann eine defekte Datei zur Folge haben
</value>
  </data>
  <data name="FolderModificationTimeReadError" xml:space="preserve">
    <value>Konnte den Datei-Änderungs-Zeitstempel nicht lesen: {0}. Fehlermeldung: {1}
</value>
  </data>
  <data name="InvalidTimeStampError" xml:space="preserve">
    <value>Der Zeitstempel für Datei {0} konnte nicht gelesen werden: {1}</value>
  </data>
  <data name="SymlinkReadError" xml:space="preserve">
    <value>The symlink information for {0} could not be read: {1}</value>
  </data>
  <data name="InvalidRelFilenameError" xml:space="preserve">
    <value>Invalid filename detected: {0}, source folders: {1}, error message: {2}</value>
  </data>
</root>