<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UseCommonPassword.ToolTip" space="preserve">
    <value>Aktivieren, um das gleiche Kennwort für mehrere Sicherungen zu verwenden</value>
  </data>
  <data name="UseCommonPassword.Text" space="preserve">
    <value>Kennwortschutz für Sicherungen</value>
  </data>
  <data name="ThreadPriorityPicker.ToolTip" space="preserve">
    <value>Geben Sie die anfängliche Thread-Priorität an, die Duplicati verwenden soll</value>
  </data>
  <data name="TempPathBrowse.ToolTip" space="preserve">
    <value>Den temporären Ordner auswählen</value>
  </data>
  <data name="TempPath.ToolTip" space="preserve">
    <value>Geben Sie den Pfad ein, wo Duplicati temporäre Dateien speichern soll</value>
  </data>
  <data name="StartupDelayDuration.ToolTip" space="preserve">
    <value>Wählen Sie die Zeitspanne, wie lange Duplicati nach dem Start
angehalten wird</value>
  </data>
  <data name="SignatureCachePathBrowse.ToolTip" space="preserve">
    <value>Den Ordner für den Signatur-Cache auswählen</value>
  </data>
  <data name="SignatureCacheEnabled.ToolTip" space="preserve">
    <value>Ein Signatur-Cache begrenzt die Datenmenge, die Duplicati herunterladen muss, indem eine Kopie auf dem Rechner gehalten wird. Das Aktivieren dieses Features macht die Sicherungen schneller</value>
  </data>
  <data name="SignatureCacheEnabled.Text" space="preserve">
    <value>Signatur-Cache</value>
  </data>
  <data name="RecentDuration.ToolTip" space="preserve">
    <value>Wählen Sie die Zeit, wie lange eine Sicherung im Protokoll-Fenster nach der Durchführung angezeigt wird</value>
  </data>
  <data name="PasswordDefaultsGroup.Text" space="preserve">
    <value>Kennwort-Einstellungen für neue Sicherungen</value>
  </data>
  <data name="LicenseTab.Text" space="preserve">
    <value>Lizenz</value>
  </data>
  <data name="LicenseSections.ToolTip" space="preserve">
    <value>Listet die verfügbaren Lizenzabschnitte auf</value>
  </data>
  <data name="LicenseLink.ToolTip" space="preserve">
    <value>Hier klicken, um zur Homepage des ausgewählten Abschnittes zu gehen</value>
  </data>
  <data name="LanguageSelection.ToolTip" space="preserve">
    <value>Wählen Sie die Sprache für die Benutzeroberfläche (Neustart erforderlich)</value>
  </data>
  <data name="label8.ToolTip" space="preserve">
    <value>Wählen Sie den Umfang der Benachrichtigungen durch Infosymbole</value>
  </data>
  <data name="label8.Text" space="preserve">
    <value>Infosymbole</value>
  </data>
  <data name="label7.ToolTip" space="preserve">
    <value>Wählen Sie die Zeitspanne, wie lange Duplicati nach dem Start
angehalten wird</value>
  </data>
  <data name="label7.Text" space="preserve">
    <value>Pause-Zeit für duplicati nach dem Start
</value>
  </data>
  <data name="label6.Text" space="preserve">
    <value>Inhalt</value>
  </data>
  <data name="label5.ToolTip" space="preserve">
    <value>Eingabe des Standard-Kennwortes für neue Sicherungen</value>
  </data>
  <data name="label5.Text" space="preserve">
    <value>Kennwort</value>
  </data>
  <data name="label4.ToolTip" space="preserve">
    <value>Geben Sie den Pfad ein, wo Duplicati temporäre Dateien speichern soll</value>
  </data>
  <data name="label4.Text" space="preserve">
    <value>Temporäre Dateien</value>
  </data>
  <data name="label3.ToolTip" space="preserve">
    <value>Wählen Sie die Sprache für die Benutzeroberfläche (Neustart erforderlich)</value>
  </data>
  <data name="label3.Text" space="preserve">
    <value>Sprache für die Benutzeroberfläche</value>
  </data>
  <data name="label2.Text" space="preserve">
    <value>Abschnitte</value>
  </data>
  <data name="label1.ToolTip" space="preserve">
    <value>Wählen Sie die Zeit, wie lange eine Sicherung im Protokoll-Fenster nach der Durchführung gezeigt wird</value>
  </data>
  <data name="label1.Text" space="preserve">
    <value>Protokollanzeige in letzten Sicherungen</value>
  </data>
  <data name="HideDonateButton.ToolTip" space="preserve">
    <value>Markieren Sie dieses Kästchen, um die Anzeige des Spende-Buttons in den Assistenten zu verhindern</value>
  </data>
  <data name="HideDonateButton.Text" space="preserve">
    <value>Spenden-Button auf der Hauptseite des Assistenten ausblenden</value>
  </data>
  <data name="groupBox4.Text" space="preserve">
    <value>Sicherungseinstellungen (beim Start wirksam)</value>
  </data>
  <data name="groupBox2.Text" space="preserve">
    <value>Pfadeinstellungen (Erweitert)</value>
  </data>
  <data name="groupBox1.Text" space="preserve">
    <value>Einstellungen für die Benutzeroberfläche</value>
  </data>
  <data name="EncryptionModule.ToolTip" space="preserve">
    <value>Standard-Verschlüsselungsmodul für neue Sicherungen auswählen</value>
  </data>
  <data name="EncryptionMethod.ToolTip" space="preserve">
    <value>Standard-Verschlüsselungsmodul für neue Sicherungen auswählen</value>
  </data>
  <data name="EncryptionMethod.Text" space="preserve">
    <value>Verschlüsselungsmethode</value>
  </data>
  <data name="CommonPassword.ToolTip" space="preserve">
    <value>Eingabe des Standard-Kennwortes für neue Sicherungen</value>
  </data>
  <data name="ClearCacheButton.ToolTip" space="preserve">
    <value>Löschen aller im Cache gespeicherten Signatur-Dateien; sie werden bei der nächsten Aktivierung der Sicherung wieder heruntergeladen</value>
  </data>
  <data name="ClearCacheButton.Text" space="preserve">
    <value>Cache löschen
</value>
  </data>
  <data name="CancelBtn.Text" space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="CacheSizeLabel.ToolTip" space="preserve">
    <value>Die Größe des aktuellen Cache-Ordners</value>
  </data>
  <data name="CacheSizeLabel.Text" space="preserve">
    <value>Berechnung Cache-Größe ...</value>
  </data>
  <data name="BasicTab.Text" space="preserve">
    <value>Allgemein</value>
  </data>
  <data name="Bandwidth.ToolTip" space="preserve">
    <value>Geben Sie die anfänglichen Bandbreitenbegrenzungen ein, die Duplicati verwenden soll</value>
  </data>
  <data name="BalloonNotificationLevel.ToolTip" space="preserve">
    <value>Wählen Sie den Umfang der Benachrichtigungen durch Infosymbole</value>
  </data>
  <data name="AdvancedTab.Text" space="preserve">
    <value>Erweitert</value>
  </data>
  <data name="$this.Text" space="preserve">
    <value>Duplicati Installation</value>
  </data>
</root>